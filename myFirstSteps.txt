import java.io.*;
iport java.nio.file.Files;
iport java.nio.Path;
iport java.nio.Paths;



class flow extends Thtread
{
    public void run(File file) throw IOException
    {
        int copies=0;
        Path source= file.toPath();
        File t = new File("C:\\d1\\(copy)"+file.getName());
        try
        {
            Files.copy(source,target);
            update(target.toString());
            Program.count--;
            System.out.println("dome");
        }
        catch(java.nio.file.NoSuchFileException e)
        {
            new File("c:\\d1").mkdir();
            run(file);
        }
        catch(java.nio.FileAlreadyExistException e)
        {
            copies++;
            System.out.println("exception");
            target = Paths.get("C:\\d1\\(copy"+copies+")"+file.getName());
            Files.copy(source,target);
            update(target.toString());
            Program1.coount--;
            System.out.println("donr");
        }
    }
    public void update(String f) throws IOException
    {
        FileWriter fw=new FileWriter(f,true);
        fw.appand("someChange");
        fw.close();
    }
}
class Program1
{
   public static final int limit = 3;
   public static int count = 1;

   public static void main(String[] args) throws IOException
   {
       BufferedReader r=new BufferedReader(new InputStreamReader(System.in));
       System.out.println("write path");
       
       try
       {
           String s = r.readLine();
           File folder = new File(s);
           File[] files = folder.listFiles();

           int i = 0;
           while (count <= limit)
           {
              flow f=new flow()
              f.run(files[i]);
              f.start();
              count++;
              i++;
           }
           main(args);
       }
       catch(ArrayIndexOutOfBoundsException e)
       {
           System.out.println("out of files");
           main(args);
       }
   }
}
       












